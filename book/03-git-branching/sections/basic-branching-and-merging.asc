=== Basic Branching and Merging

When the work on your branch is complete, the simplest way to share it is to merge it with master.

[[_basic_merging]]
==== Basic Merging

(((branches, merging)))(((merging)))
Suppose you've decided that your work is complete and ready to be merged into your `master` branch.
In order to do that, you'll merge your branch into `master`.
In Team Explorer *Branches*, checkout master and click *Merge*.

.Simple Merge.
image::images/merge.png[Simple Merge.]


So long as the master branch has not diverged from your branch, this will create a "fast-forward" commit.
When you try to merge one commit with a commit that can be reached by following the first commit's history, Git simplifies things by moving the pointer forward because there is no divergent work to merge together -- this is called a ``fast-forward.''

.`master` is fast-forwarded to `hotfix`
image::images/basic-branching-5.png[`master` is fast-forwarded to `hotfix`.]


If your development history has diverged from some older point, the commit on the branch you're on isn't a direct ancestor of the branch you're merging in, and Git has to do some work.
In this case, Git does a simple three-way merge, using the two snapshots pointed to by the branch tips and the common ancestor of the two.

.Three snapshots used in a typical merge
image::images/basic-merging-1.png[Three snapshots used in a typical merge.]

Instead of just moving the branch pointer forward, Git creates a new snapshot that results from this three-way merge and automatically creates a new commit that points to it.
This is referred to as a merge commit, and is special in that it has more than one parent.

.A merge commit.
image::images/basic-merging-2.png[A merge commit.]

Once your work is merged in, you have no further need for the branch. You can close the issue in the tracking system and delete the branch.

To delete the branch, make sure it isn't checked out, then right-click on the branch in the Team Explorer *Branches* view and click delete. 

.Delete Branch.
image::images/vsbranchdelete.gif[Delete Branch.]

[WARNING]
This option can also delete branches that have yet not been merged. If you have unpublished changes, Visual Studio will ask for confirmation in case you lose work.

[[_basic_merge_conflicts]]
==== Basic Merge Conflicts

(((merging, conflicts)))
Occasionally, this process doesn't go smoothly.
If you changed the same part of the same file differently in the two branches you're merging, Git won't be able to merge them cleanly.
A conflict notification will appear. Click *Conflicts* to start to resolve the conflicts.

.Merge Prompt.
image::images/merge_prompt_vs.png[Merge Prompt.]

This will bring up a list of unresolved merge conflicts. You can accept the branch you are merging from with the *Take Source* button or keep the chnages in the branch you are merging into with *Keep Target*, or resolve the conflicts manually by selectting *Merge*. use the checkboxes next to the modified lines to select between remote and local changes entirely, or edit the results directly in the *Result* editor. When done, click *Accept Merge*, and repeat the process for all conflcting files. Once all conflicts are resolved yo will be able to commit the changes to create the merge commit.

.Resolve Merge Conflicts.
image::images/vsmerge.gif[Resolve Merge Conflicts..]

