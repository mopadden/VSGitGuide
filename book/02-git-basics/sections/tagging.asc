[[_git_tagging]]
=== Tagging

(((tags)))
Like most VCSs, Git has the ability to tag specific points in a repository's history as being important.
Typically, people use this functionality to mark release points (`v1.0`, `v2.0` and so on).
In this section, you'll learn how to view existing tags, how to create and delete tags, and what the different types of tags are.

==== Viewing Your Tags

Viewing tags in Git is done from the *Tags* in the *Home* view.

.View Tags.
image::images/view-tags-vs.png["View Tags."]

Tags are shown  in alphabetical order; the order in which they are displayed has no real importance.

You can also search for tags that match a particular pattern by typing a search term into the *Type here to filter the list* box.

.Filter Tags.
image::images/filter-tags-vs.png["Filter Tags."]


==== Creating Tags

Git supports two types of tags: _lightweight_ and _annotated_.

A lightweight tag is very much like a branch that doesn't change -- it's just a pointer to a specific commit.

Annotated tags, however, are stored as full objects in the Git database.
They're checksummed; contain the tagger name, email, and date; have a tagging message; and can be signed and verified with GNU Privacy Guard (GPG).
It's generally recommended that you create annotated tags so you can have all this information; but if you want a temporary tag or for some reason don't want to keep the other information, lightweight tags are available too.

[[_annotated_tags]]
==== Annotated Tags

(((tags, annotated)))

To create an annotated tag against the tip of the current branch, select *New Tag* in the *Tags* view, give a name to the tag and enter a tag message.

.Create Tag.
image::images/create-tag-button-vs.png["Create Tag."]

.Create Tag Against Tip of Current Branch.
image::images/create-tag-current-branch-vs.png["Create Tag Against Tip of Current Branch."]

Annotated tags show a tooltip with the tag name, tagger, tag date and message.

.Tag Style.
image::images/tag-style-vs.png["Tag Style."]


==== Lightweight Tags

(((tags, lightweight)))
Another way to tag commits is with a lightweight tag.
This is basically the commit checksum stored in a file -- no other information is kept.
To create a lightweight tag, don't supply a tag message, just provide a tag name.
Lightweight tags only show the tag name, with no other details in the tooltip.

==== Tag Details

For more information about the tagged commit, right-clik the tag and select *View Commit Details*

.View Commit Details.
image::images/view-commit-details-vs.png["View Commit Details."]

==== Tagging Later

You can create a tag against the tip of another branch by clearing the *Create tag against tip of current branch* check box and selecing a branch from the *Select a branch* drop-down.

.Create Tag From Select Branch.
image::images/create-tag-select-branch-vs.png["Create Tag From Select Branch."]

You can also tag commits after you've moved past them from the history view by right-clicking the desired commit and choosing *Create Tag*.

.Create Tag From Commit.
image::images/create-tag-from-commit-vs.png["Create Tag From Commit."]


[[_sharing_tags]]
==== Sharing Tags

By default, the `git push` command doesn't transfer tags to remote servers.(((git commands, push)))
You will have to explicitly push tags to a shared server after you have created them.
This process is just like sharing remote branches -- you can right click the tag and choose *Push*.
If you have a lot of tags that you want to push up at once, you can also use choose *Push All*.
This will transfer all of your tags to the remote server that are not already there.

.Share Tags.
image::images/tag-created-vs.png["Share Tags."]

Now, when someone else clones or pulls from your repository, they will get all your tags as well.

[NOTE]
.*Push All* pushes both types of tags
====
There is currently no option to push only lightweight tags.
====

==== Deleting Tags

To delete a tag on your local repository, right click the tag and choose *Delete Locally*

.Delete Tag.
image::images/delete-tag-vs.png["Delete Tag."]

==== Checking out Tags

If you want to create a new working branch from a tag, righ-click the tag and choose *New Local Branch From* or click *Create Branch From tag*.

.Create Branch From Tag.
image::images/branch-from-tag-vs.png["Create Branch From Tag."]
