[[_getting_a_repo]]
=== Getting a Git Repository

You typically obtain a Git repository in one of four ways:

1. You can create a new project with a Git repository.
2. You can add a Git Repository to an existing project.
3. You can _clone_ an existing Git repository from elsewhere.
4. You create an new repository in a new working folder.

In each case, you end up with a Git repository on your local machine, ready for work.

[_vs_create_git_repo]
==== Creating a New Project with a Git Repository
When you are creating a new project or solution, you can ask Visual Studio to place it under version control.

.Create a new Project and Repository.
image::images/vscreategitrepo.png["Create Version-Controlled Project."]

[_vs_import_project_into_repository]
==== Adding a Git Repository to an Existing Project

If you have a project that is currently not under version control and you want to start controlling it with Git, you first need to open that  that project, and then select Add to Source Control in the bottom-right of the lower status bar, and select Git. 

.Add To Git Source Control.
image::images/0TWRV-addtosourcecontrol.png["Add To Git Source Control."]

This creates a new subdirectory named `.git` that contains all of your necessary repository files -- a Git repository skeleton, Ignore File,  Attributes File, and adds commits files and the solution source into the repository.

[[_git_cloning]]
==== Cloning an Existing Repository
If you want to get a copy of an existing Git repository, you need to 'clone' the repository.
In Team Explorer, open the Connect page by selecting the Connect button. Choose Manage Connections then Connect to Project.

.Managing connections.
image::images/manage-connections.png["Managing connections."]

In Connect to a Project, select the repo you want to clone from the list and select Clone.

.Connect to a project.
image::images/vs2017-connect-dialog.png["Connect to a project."]

That creates a directory named `FabrikamFiber`, initializes a `.git` directory inside it, pulls down all the data for that repository, and checks out a working copy of the latest version.
You can go into the new `FabrikamFiber` directory that was just created, you'll see the solution in there, ready to be worked on or used.

If you want to clone the repository into a directory named something other than `libgit2`, you can change the Path in the dialog.

[_vs_create_empty_git_repo]
==== Creating a New Empty Repository
You can also ask Visual Studio to create a new git repository in a new empty folder.

.Create Empty Git Repository.
image::images/create-empty-repository.png["Create Empty Git Repository."] 

[IMPORTANT]
If you start with a blank repository, remember to set up an appropriate Git Ignore and Git Attributes files.

=== Git Ignore and Attributes settings
Ignore and Attributes file settings can be checked in the repository settings.

.Ignore and Attributes Files.
image::images/ignore-and-attributes-files.png["Ignore and Attributes Files."]

Repository settings are scoped to each local Git repository on the dev machine and are normally commited so that everyone else on the team uses the same repository settings.

Ignore File: To avoid checking in temporary non-source items such as binaries, you can specify a .gitignore file. See Ignoring files and gitignore(5) Manual Page.

Attributes File: To specify options such as how the system handles line-breaks, you can specify a .gitattributes file. See Customizing Git â€“ Git Attributes.

