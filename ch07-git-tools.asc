[[ch07-git-tools]]
== Git Tools

By now, you've learned most of the day-to-day commands and workflows that you need to manage or maintain a Git repository for your source code control.
You've accomplished the basic tasks of tracking and committing files, and you've harnessed the power of the staging area and lightweight topic branching and merging.

Now you'll explore a couple of tools you may not necessarily use on a day-to-day basis but can often be useful.

include::book/07-git-tools/sections/reset.asc[]

include::book/07-git-tools/sections/debugging.asc[]

=== Summary

You've seen a couple of advanced tools that allow you to squash commits and find which commit changes came from. 
At this point, you should be able to do most of the things in Git that you'll need day to day and feel comfortable doing so.

=== Further Reading

There are some tasks that you will need to perform from time to time. 
For these you will need to step outside Visual Studio and use a dedicate Git GUI and/or the command line.
The Visual Studio Git Extensions plugin provides access to tools that give you more control over your commits and staging area.
The command line provides powerful merging and conflict resolution and debugging tools, commit signing, and project dependency management with subprojects.
You can read about these in https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection[Chapter 7 of Pro Git], from the book on which this Guide is based.


