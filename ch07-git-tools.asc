[[ch07-git-tools]]
== Git Tools

By now, you've learned most of the day-to-day commands and workflows that you need to manage or maintain a Git repository for your source code control.
You've accomplished the basic tasks of tracking and committing files, and you've harnessed the power of the staging area and lightweight topic branching and merging.

Now you'll explore a couple of tools you may not necessarily use on a day-to-day basis but that you may need at some point.

include::book/07-git-tools/sections/reset.asc[]

include::book/07-git-tools/sections/debugging.asc[]

include::book/07-git-tools/sections/credentials.asc[]

=== Summary

You've seen a number of advanced tools that allow you to squash commits, find which commit changes came from, and set up credentials to remote repositories. 
At this point, you should be able to do most of the things in Git that you'll need day to day and feel comfortable doing so.

=== Further Reading

There are some tasks that you will need to perform from time to time, for which you will need to step outside Visual Studio.
Git provides a range of more powerful tools that can be accessed with a dedicated GUI and/or the command line.
The Visual Studio Git Extensions plugin provides access to tools that give you more control over your commits and staging area.
The command line also supports signing commits, advanced merging and conflict resolution strategies, and subprojects for project dependencies.
You can read about these in https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection[Chapter 7 of Pro Git], from the book on which this Guide is based.


